[{"content":" 本文章持续更新，有修改意见可以联系站长！\n校墙介绍 待完善\n使用指南 观看校墙 添加JockerBot机器人 打开 机器人名片，请用QQ手机版打开！\n在JockerBot的QQ空间就是全部动态!\n上传至校墙 注册账号 投稿页面（请用手机流量打开）：\n首次进入，先注册账号 私信JockerBot以下内容\n#注册账号\nJockerBot将会回复一个默认密码\n登录并投稿 打开校墙投稿网址（仅限IPv6，手机流量访问）\n主链接 jokerbot.sarkis.icu\n备用链接 bot.tflasp.fun\n接下来用你的QQ号和刚刚得到的密码进行登录。\n登陆后即可在主界面投稿，审核完成后将会展示在校墙上！\n在主界面投稿 ","date":"2024-10-18T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/campux/","title":"Campux校墙使用指南"},{"content":"前言 近期有几个朋友笔记本硬盘坏了，拿去恢复数据，硬件层面的问题解决后发现硬盘有BitLocker加密，而他全然不知道此事，微软账号里也没有备份，所以数据也就无法找回了。这也是我写这篇文章的原因之一。\nBitLocker 是一项 Windows 安全功能，可为整个卷提供加密，解决因设备丢失、被盗或不适当停用而导致数据被盗或泄露的威胁。但是，在2020年后的新笔记本电脑一般已开启Bitlocker功能（即硬盘中数据已被加密），若计算机硬件有改变或损坏，重新进入已加密的系统会要求输入“恢复密钥”，如下图。若密钥丢失，则加密分区中的数据全部丢失！\n如果的确担心数据安全或有重要数据，请及时备份密钥（或使用其他加密软件，如：VeraCrypt），或者按照公司要求保存在指定驱动器里！\nBitlocker恢复界面（将会在开机时显示） 原理 若对原理不感兴趣可以 往下翻 或 单击右侧目录栏跳转至“解密方法” 以查看解密步骤！\nBitlocker使用TPM解密 原理图（图源：MSDN） 图解：\nBIOS 启动并初始化TPM。并measure firmware部分敏感内容和启动分区以及bootloader，将结果放入PCR组。 2.如果 PCR 值与期望值相匹配，则 TPM 将使用存储根密钥 (SRK) 对卷主密钥 (VMK) 进行解密。\n从卷中读取加密 FVEK，并使用解密 VMK 对其进行解密。\n访问磁盘扇区时，使用 FVEK 进行解密。\n为应用程序和过程提供解密数据。\n其中SRK存储在TPM芯片中，它是整个过程的信任根。BitLocker通过检测PCR组，对主启动记录 (MBR) 代码、NTFS 启动扇区、NTFS 启动块、启动管理器和其他重要组件进行检查，如果被更改，则第2步将出错，要求输入recovery PIN值。\n详细原理请跳转至Microsoft官方文档：Microsoft Learn: BitLocker overview\n触发条件 1，更换主板（100%触发，把硬盘拆下做成移动硬盘也在此列） 2，修改高级启动设置（高概率） 3，同一台电脑上存在两个以上的系统盘或引导（高概率，PE应该也在此列） 4，更换CPU/内存/显卡/网卡/加装硬盘（低概率） 5，更新BIOS（低概率） 6，Win10更新时崩溃卡死（低概率） 解密方法 (Windows10/11通用) 以下内容涉及图片较多，建议打开Github加速器查看。\n辨别当前磁盘状态 Case 1 （无需解密） 打开“此电脑”，若磁盘图标同下，则磁盘未被加密，无需进行任何操作！！\n磁盘上无任何标记，未被加密 Case 2 （需要解密） 磁盘上有带锁图标且存在感叹号，该磁盘已被加密，但还缺失连接账户的步骤！普通用户建议直接解密。\n磁盘上有带锁图标且存在感叹号，该磁盘已被加密，但还缺失连接账户的步骤 Case 3 （需要解密） 磁盘上出现打开的锁，该磁盘已被完全加密 解密步骤（请务必判断自身磁盘状态后进行操作） 同时按Windows徽标键+R 调出 运行，并输入control，回车\n同时按Windows徽标键+R 调出 运行，并输入control，回车 将查看方式改为“小图标”\n将查看方式改为“小图标” 单击“Bitlocker驱动器加密”\n单击“Bitlocker驱动器加密” 选择要解密的驱动器，单击“关闭BitLocker，并授予权限\n选择要解密的驱动器，单击“关闭BitLocker”，并授予权限 注意：解密过程会消耗一段时间，根据磁盘性能和磁盘内已有文件大小相关，解密时可正常使用电脑，期间可以关机，但是异常断电会导致数据丢失！！！ 若需输入恢复密钥，可在微软账户里寻找到密钥，微软官网\n密钥示例 将密钥ID与设备上的密钥ID匹配后，输入正确的恢复密钥即可解密。\n参考资料 [1] Microsoft Learn/Windows/Security TPM fundamentals\n[2] Microsoft Learn/Windows/Security BitLocker countermeasures\n[3] Bitlocker、TPM和系统安全\n","date":"2024-09-26T00:00:00Z","image":"https://tech.tflasp.fun/2024/disable-bitlocker/slug_hu9aa84ac18bb931771514ff44b5481641_49366_120x120_fill_box_smart1_3.png","permalink":"https://tech.tflasp.fun/2024/disable-bitlocker/","title":"【教程】保障数据安全，关闭Bitlocker"},{"content":"下载时记得关闭杀毒软件，若被误杀请重新下载。\n资料由站长收集整理，仅供学习交流，严禁用于商业用途，请于24小时内删除。\n系统优化工具 Name Password Windows10永久数字激活工具 \\ Geek Uninstaller卸载工具 \\ Windows Defender Blocker 解压密码：sordum Windows Update Blocker \\ Windows 11 轻松设置 \\ ExecTI提权工具 9ywa Everything \\ DragonKMS Activator \\ AIDA64 \\ FastCopy \\ RaiDrive2020.11.30 Old version faqd TotalCMD h65b qBittorrent \\ AS SSD Benchmark 9uzk CrystalDiskInfo \\ Intel CAS(Cache Acceleration Software) c276 BoardViewer点位图查看 \\ 系统安装工具 Name Password Dism++ \\ DiskGeniusPRO \\ Rufus 5k8t EasyUEFI 4bva BOOTICE \\ RAMOS \\ WinNTSetup \\ MBR recovery 1bz8 BIOSBackupTool 64u3 MMTool 2up8 EFI Shell 刷写BIOS \\ 其他工具 量产工具 Name Password ChipGenius4.21.0701 \\ TRANSCEND-SM32X-PV1.3.08-U1207 aph6 SM2258XT_Sandisk_BiCS4_T0910A0 43pf SM2258XT(AD)_B16A_PKGV0608A_FWV0328A0 Beta \\ SM2258XT东芝BiCS4颗粒（T0910A0固件）【8Die】 \\ TRANSCEND-SM32X-PV1.3.08-BY-USBDEV-U1207 \\ ","date":"2024-08-23T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/links/","title":"工具包分享"},{"content":"问题重现 PVE 启动时，看到屏幕上有提示要求更新 microcode。\n添加仓库 需要添加 unstable repo：\necho \u0026quot;deb http://deb.debian.org/debian/ unstable non-free-firmware\u0026quot; \u0026gt; /etc/apt/sources.list.d/debian-unstable.list 执行更新：\napt update \u0026amp;\u0026amp; apt list --upgradable 安装微码，intel 选择：\napt -y install intel-microcode amd 选择：\napt -y install amd64-microcode 更新完之后重启，发现之前报告要求更新 microcode 的信息消失了，搞定。\n记得把 unstable 仓库删除，避免不小心更新到这个仓库中的其他软件。\nrm /etc/apt/sources.list.d/debian-unstable.list 引发问题 安装上面的方式安装微码之后，即使注释或者删除 debian-unstable.list 文件，在 apt update 时也会出现以下提示：\n$ apt update Hit:1 https://mirrors.ustc.edu.cn/debian bookworm InRelease Hit:2 https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bookworm InRelease Hit:3 https://mirrors.ustc.edu.cn/debian bookworm-updates InRelease Reading package lists... Done Building dependency tree... Done Reading state information... Done All packages are up to date. N: Repository 'Debian bookworm' changed its 'firmware component' value from 'non-free' to 'non-free-firmware' N: More information about this can be found online in the Release notes at: https://www.debian.org/releases/bookworm/amd64/release-notes/ch-information.html#non-free-split 如果不想继续看到这个提示，可以修改文件：\nvi /etc/apt/apt.conf.d/no-bookworm-firmware.conf 输入内容：\nAPT::Get::Update::SourceListWarnings::NonFreeFirmware \u0026quot;false\u0026quot;; 再次执行 apt update 命令就不会再出现这个提示了：\n$ apt update Hit:1 https://mirrors.ustc.edu.cn/debian bookworm InRelease Hit:2 https://mirrors.ustc.edu.cn/debian bookworm-updates InRelease Hit:3 https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bookworm InRelease Reading package lists... Done Building dependency tree... Done Reading state information... Done All packages are up to date. 参考资料 How to Install the Latest Microcode on Proxmox VE (Debian stable) ","date":"2024-08-21T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/microcode/","title":"【归档】Proxmox VE更新CPU微码"},{"content":"问题重现 发现更新驱动之后，普通模式下可以正常工作，但一旦开启直通，这个驱动就会无法工作。\n而因为 RTL8139 被加入黑名单，导致没有驱动可用，然后网卡就无法使用。\n因为这个网卡是用于管理网络的，所以 PVE 也跟着失联了\u0026hellip;\u0026hellip;\n因此，放弃更新这个驱动。后续移除了所有的 2.5G 网卡，统一使用 cx3 pro 40g （hp544+）或者 cx4 25g 网卡。\n准备工作 apt install -y dkms\rapt install -y pve-headers-$(uname -r)\rapt install --fix-broken\r下载驱动 https://github.com/awesometic/realtek-r8125-dkms/releases\nmkdir ~/temp\rcd ~/temp\rwget https://github.com/awesometic/realtek-r8125-dkms/releases/download/9.010.01-2/realtek-r8125-dkms_9.010.01-2_amd64.deb\r通过安装包安装驱动 dpkg -i realtek-r8125-dkms_9.010.01-2_amd64.deb\r输出为：\ndpkg -i realtek-r8125-dkms_9.010.01-2_amd64.deb\rSelecting previously unselected package realtek-r8125-dkms.\r(Reading database ... 86910 files and directories currently installed.)\rPreparing to unpack realtek-r8125-dkms_9.010.01-2_amd64.deb ...\rUnpacking realtek-r8125-dkms (9.010.01-2) ...\rSetting up realtek-r8125-dkms (9.010.01-2) ...\rlocale: Cannot set LC_ALL to default locale: No such file or directory\rLoading new realtek-r8125-9.010.01 DKMS files...\rDeprecated feature: REMAKE_INITRD (/usr/src/realtek-r8125-9.010.01/dkms.conf)\rBuilding for 6.2.16-4-pve\rBuilding for architecture amd64\rBuilding initial module for 6.2.16-4-pve\rDeprecated feature: REMAKE_INITRD (/var/lib/dkms/realtek-r8125/9.010.01/source/dkms.conf)\rDone.\rDeprecated feature: REMAKE_INITRD (/var/lib/dkms/realtek-r8125/9.010.01/source/dkms.conf)\rDeprecated feature: REMAKE_INITRD (/var/lib/dkms/realtek-r8125/9.010.01/source/dkms.conf)\rr8125.ko:\rRunning module version sanity check.\r- Original module\r- No original module exists within this kernel\r- Installation\r- Installing to /lib/modules/6.2.16-4-pve/updates/dkms/\rdepmod...\r这个版本是 9.010。\n通过源码安装驱动 发现代码里面有更新到 9.011，只是没有打包发布为 deb 格式。但是可以从源码开始安装。\ngit clone https://github.com/awesometic/realtek-r8125-dkms.git cd realtek-r8125-dkms\r./dkms-install.sh\r输出为：\n./dkms-install.sh About to run dkms install steps...\rDeprecated feature: REMAKE_INITRD (/usr/src/r8125-9.011.01/dkms.conf)\rCreating symlink /var/lib/dkms/r8125/9.011.01/source -\u0026gt; /usr/src/r8125-9.011.01\rSign command: /lib/modules/6.2.16-4-pve/build/scripts/sign-file\rSigning key: /var/lib/dkms/mok.key\rPublic certificate (MOK): /var/lib/dkms/mok.pub\rDeprecated feature: REMAKE_INITRD (/var/lib/dkms/r8125/9.011.01/source/dkms.conf)\rBuilding module:\rCleaning build area...\r'make' -j16 KVER=6.2.16-4-pve BSRC=/lib/modules/6.2.16-4-pve modules......\rSigning module /var/lib/dkms/r8125/9.011.01/build/src/r8125.ko\rCleaning build area...\rDeprecated feature: REMAKE_INITRD (/var/lib/dkms/r8125/9.011.01/source/dkms.conf)\rr8125.ko:\rRunning module version sanity check.\r- Original module\r- Installation\r- Installing to /lib/modules/6.2.16-4-pve/updates/dkms/\rdepmod...\rFinished running dkms install steps.\r更换驱动 屏蔽 R8169 驱动：\nsudo sh -c 'echo blacklist r8169 \u0026gt;\u0026gt; /etc/modprobe.d/blacklist_r8169.conf'\r重启机器，检验：\nlsmod | grep r81 r8125 262144 0\rr8169 114688 0\r对比没有更新驱动的输出：\nlsmod | grep r81 r8169 114688 0\r检验 更新之前，客户端和服务器端都使用默认的 r8169 驱动，iperf3 测试速度为 2.35-2.36G。\n更新客户端驱动为 r8125 驱动, iperf3 测试速度为 2.35-2.36 G，几乎没有变化。\n继续更新服务器端驱动为 r8125 驱动, iperf3 测试速度为 2.35/2.36G，几乎没有变化。\n总结：更新驱动未能带来速度方面的直接收益。\n参考资料 https://zhuanlan.zhihu.com/p/577161166 https://www.right.com.cn/forum/forum.php?mod=viewthread\u0026tid=7446026 https://github.com/awesometic/realtek-r8125-dkms ","date":"2024-08-21T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/rtl8125-driver/","title":"【归档】PVE安装RTL8125驱动"},{"content":"前面在安装 PVE 时，选择了留出 50G 大小的空间给 timeshift 使用。\n为 timeshift 准备分区 查看当前磁盘分区情况 fdisk -l\r查看当前硬盘情况：\nDisk /dev/nvme0n1: 465.76 GiB, 500107862016 bytes, 976773168 sectors\rDisk model: WDC WDS500G1B0C-00S6U0 Units: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rI/O size (minimum/optimal): 512 bytes / 512 bytes\rDisklabel type: gpt\rDisk identifier: 000372CE-8B4D-4B12-974B-99C231DB3D67\rDevice Start End Sectors Size Type\r/dev/nvme0n1p1 34 2047 2014 1007K BIOS boot\r/dev/nvme0n1p2 2048 2099199 2097152 1G EFI System\r/dev/nvme0n1p3 2099200 838860800 836761601 399G Linux LVM\rDisk /dev/mapper/pve-swap: 8 GiB, 8589934592 bytes, 16777216 sectors\rUnits: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rI/O size (minimum/optimal): 512 bytes / 512 bytes\rDisk /dev/mapper/pve-root: 96 GiB, 103079215104 bytes, 201326592 sectors\rUnits: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rI/O size (minimum/optimal): 512 bytes / 512 bytes\r这是一个大小为 480G 的 nvme SSD 硬盘，实际可用空间为 465G。在安装 PVE 时我将 hdsize 设置为 400G, 因此 PVE 使用的空间只有400G。从上面输出可以看到：\n/dev/nvme0n1p1 34 2047 2014 1007K BIOS boot\r/dev/nvme0n1p2 2048 2099199 2097152 1G EFI System\r/dev/nvme0n1p3 2099200 838860800 836761601 399G Linux LVM\rnvme0n1p1 是 BIOS， nvme0n1p2 是 EFI 分区，PVE 使用的是 nvme0n1p3，399G。\n另外可以看到：\nDisk /dev/mapper/pve-swap: 8 GiB, 8589934592 bytes, 16777216 sectors\rDisk /dev/mapper/pve-root: 96 GiB, 103079215104 bytes, 201326592 sectors\rswap 使用了 8G， pve root 使用了 96 G。\nlsblk -f\r可以看到 nvme0n1p3 是一个 LVM2，400G 的总空间中，内部被分为 pve-swap / pve-root / pve-data_tmeta\nNAME FSTYPE FSVER LABEL UUID FSAVAIL FSUSE% MOUNTPOINTS\rnvme0n1 |-nvme0n1p1 |-nvme0n1p2 vfat FAT32 26F2-091E 1021.6M 0% /boot/efi\r`-nvme0n1p3 LVM2_member LVM2 001 foXyBZ-IPQT-wOCF-DWSN-u88a-sBVD-LaZ9zn |-pve-swap swap 1 c5d97cb5-4d18-4f43-a36f-fb67eb8dcc84 [SWAP]\r|-pve-root ext4 1.0 a0a46add-dda5-42b4-a978-97d363eeddd0 85.2G 4% /\r|-pve-data_tmeta | `-pve-data `-pve-data_tdata `-pve-data 剩余的大约 60G 的空间在这里没有显示。\n添加 timeshift 分区 fdisk /dev/nvme0n1\r输出为：\nWelcome to fdisk (util-linux 2.38.1).\rChanges will remain in memory only, until you decide to write them.\rBe careful before using the write command.\rThis disk is currently in use - repartitioning is probably a bad idea.\rIt's recommended to umount all file systems, and swapoff all swap\rpartitions on this disk.\r在警告说磁盘使用中，重新分区不是一个好注意。不过我们是操作剩余空间，比较安全。\n输入 m 获得帮助：\nCommand (m for help): m\rHelp:\rGPT\rM enter protective/hybrid MBR\rGeneric\rd delete a partition\rF list free unpartitioned space\rl list known partition types\rn add a new partition\rp print the partition table\rt change a partition type\rv verify the partition table\ri print information about a partition\rMisc\rm print this menu\rx extra functionality (experts only)\rScript\rI load disk layout from sfdisk script file\rO dump disk layout to sfdisk script file\rSave \u0026amp; Exit\rw write table to disk and exit\rq quit without saving changes\rCreate a new label\rg create a new empty GPT partition table\rG create a new empty SGI (IRIX) partition table\ro create a new empty MBR (DOS) partition table\rs create a new empty Sun partition table\r输入 F 列出未分区的剩余空间：\nCommand (m for help): F\rUnpartitioned space /dev/nvme0n1: 65.76 GiB, 70610066944 bytes, 137910287 sectors\rUnits: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rStart End Sectors Size\r838862848 976773134 137910287 65.8G\r这个 65.8G 就是我们之前预留的空间。\n输入 n 添加新的分区，默认是利用剩余空间的全部。这里敲三次回车全部默认即可。\nCommand (m for help): n\rPartition number (4-128, default 4): First sector (838860801-976773134, default 838862848): Last sector, +/-sectors or +/-size{K,M,G,T,P} (838862848-976773134, default 976773119): Created a new partition 4 of type 'Linux filesystem' and of size 65.8 GiB.\r如果不是利用全部剩余空间，则可以通过输入 +100G 这样的内容来设置要添加的分区大小。\n输入 p 显示修改之后的分区表：\nCommand (m for help): p\rDisk /dev/nvme0n1: 465.76 GiB, 500107862016 bytes, 976773168 sectors\rDisk model: WDC WDS500G1B0C-00S6U0 Units: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rI/O size (minimum/optimal): 512 bytes / 512 bytes\rDisklabel type: gpt\rDisk identifier: 000372CE-8B4D-4B12-974B-99C231DB3D67\rDevice Start End Sectors Size Type\r/dev/nvme0n1p1 34 2047 2014 1007K BIOS boot\r/dev/nvme0n1p2 2048 2099199 2097152 1G EFI System\r/dev/nvme0n1p3 2099200 838860800 836761601 399G Linux LVM\r/dev/nvme0n1p4 838862848 976773119 137910272 65.8G Linux filesystem\r可以看到我们新加的 nvme0n1p4 分区大小为 65.8G。\n检查无误，输入 w 写入修改操作并退出。\nCommand (m for help): w\rThe partition table has been altered.\rSyncing disks.\r在 pve 下执行\nfdisk -l 再次检查分区情况：\n......\rDevice Start End Sectors Size Type\r/dev/nvme0n1p1 34 2047 2014 1007K BIOS boot\r/dev/nvme0n1p2 2048 2099199 2097152 1G EFI System\r/dev/nvme0n1p3 2099200 838860800 836761601 399G Linux LVM\r/dev/nvme0n1p4 838862848 976773119 137910272 65.8G Linux filesystem\r至此 timeshift 分区准备OK.\n格式化 timeshift 分区 mkfs.ext4 /dev/nvme0n1p4\r对分区进行格式化，格式为 ext4：\nmke2fs 1.47.0 (5-Feb-2023)\rDiscarding device blocks: done Creating filesystem with 17238784 4k blocks and 4317184 inodes\rFilesystem UUID: 2411eb4e-67f1-4c7d-b633-17df1fa0c127\rSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424\rAllocating group tables: done Writing inode tables: done Creating journal (131072 blocks): done\rWriting superblocks and filesystem accounting information: done 安装 timeshift 具体参考这里：\nhttps://skyao.io/learning-ubuntu-server/docs/installation/timeshift/install/\n安装配置完成后，执行\ntimeshift --list\r查看 timeshift 情况：\nFirst run mode (config file not found)\rSelected default snapshot type: RSYNC\rMounted '/dev/nvme0n1p4' at '/run/timeshift/5364/backup'\rDevice : /dev/nvme0n1p4\rUUID : 2411eb4e-67f1-4c7d-b633-17df1fa0c127\rPath : /run/timeshift/5364/backup\rMode : RSYNC\rStatus : No snapshots on this device\rFirst snapshot requires: 0 B\rNo snapshots found\r使用 timeshift 进行备份 设置自动备份 vi /etc/timeshift/timeshift.json\r打开 timeshift 配置文件，修改以下内容\n{\r\u0026quot;schedule_monthly\u0026quot; : \u0026quot;true\u0026quot;,\r\u0026quot;schedule_weekly\u0026quot; : \u0026quot;true\u0026quot;,\r\u0026quot;schedule_daily\u0026quot; : \u0026quot;true\u0026quot;,\r\u0026quot;schedule_hourly\u0026quot; : \u0026quot;false\u0026quot;,\r\u0026quot;schedule_boot\u0026quot; : \u0026quot;false\u0026quot;,\r\u0026quot;count_monthly\u0026quot; : \u0026quot;2\u0026quot;,\r\u0026quot;count_weekly\u0026quot; : \u0026quot;3\u0026quot;,\r\u0026quot;count_daily\u0026quot; : \u0026quot;5\u0026quot;,\r\u0026quot;count_hourly\u0026quot; : \u0026quot;6\u0026quot;,\r\u0026quot;count_boot\u0026quot; : \u0026quot;5\u0026quot;,\r}\r对于软路由机器，由于是长期开机并且改动不过，因此 schedule_monthly / schedule_weekly / schedule_daily 设置为 true，数量用默认值。\n排除不需要备份的内容 默认情况下 timeshift 的配置文件中已经设置了 exclude：\n{\r\u0026quot;exclude\u0026quot; : [\r\u0026quot;/var/lib/ceph/**\u0026quot;,\r\u0026quot;/root/**\u0026quot;\r],\r\u0026quot;exclude-apps\u0026quot; : []\r}\r/var/lib/ceph/： ceph 相关的文件\n/root/: root 用户的 home 路径，如果使用其他用户，也需要将它们的 home 目录加入进来。\n但这些是不够的，还需要增加以下内容：\n/var/lib/vz/\npve的各种文件，包括虚拟机，模版，备份，上传的iso文件等都在这里，这些文件太大，不适合用 timeshift 备份，因此必须排除。\nls /var/lib/vz\rdump images private snippets template\rdump： 这里保存 pve backup 备份下来的虚拟机镜像文件 images： 这里保存 pve 虚拟机镜像文件 template： iso 子目录中保存的是上传到 pve 的各种 iso/img 文件 /etc/pve/qemu-server/: pve 的虚拟机配置文件，这些文件也不要用 timeshift 备份，避免恢复时把虚拟机文件也给覆盖了。虚拟机文件的备份会由下一节中提到的自动脚本进行备份。\n/mnt/pve: 在 pve 下使用 nfs 存储时，远程 nfs 会自动 mount 到这个目录下，这些文件肯定也不能被 timeshift 备份。因此必须排除。\n最后通过设置的 exclude 为：\n{\r......\r\u0026quot;exclude\u0026quot; : [\r\u0026quot;/var/lib/ceph/**\u0026quot;,\r\u0026quot;/root/**\u0026quot;,\r\u0026quot;/var/lib/vz/**\u0026quot;,\r\u0026quot;/etc/pve/qemu-server/**\u0026quot;,\r\u0026quot;/mnt/pve/**\u0026quot;\r],\r}\r设置自动备份虚拟机文件 见下一章，推荐完成这个操作之后再执行手工备份。\n手工备份 timeshift --create --comments \u0026quot;first backup after apt upgrade and basic soft install\u0026quot;\r输入为：\nEstimating system size...\rCreating new snapshot...(RSYNC)\rSaving to device: /dev/nvme0n1p4, mounted at path: /run/timeshift/6888/backup\rSyncing files with rsync...\rCreated control file: /run/timeshift/6888/backup/timeshift/snapshots/2023-07-25_21-10-04/info.json\rRSYNC Snapshot saved successfully (41s)\rTagged snapshot '2023-07-25_21-10-04': ondemand\r------------------------------------------------------------------------------\r查看当前备份情况：\ntimeshift --list Mounted '/dev/nvme0n1p4' at '/run/timeshift/7219/backup'\rDevice : /dev/nvme0n1p4\rUUID : 2411eb4e-67f1-4c7d-b633-17df1fa0c127\rPath : /run/timeshift/7219/backup\rMode : RSYNC\rStatus : OK\r1 snapshots, 64.5 GB free\rNum Name Tags Description ------------------------------------------------------------------------------\r0 \u0026gt; 2023-07-25_21-10-04 O first backup after apt upgrade and basic soft install 结合备份之前看到的 timeshift 备份分区的大小为 65.8G，减去这里的 64.5 GB free，也就是这个备份用掉了 1.3 G 的磁盘空间。\n","date":"2024-08-21T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/timeshift/","title":"【归档】PVE安装配置timeshift"},{"content":"问题复现 爱国者P7000Z（以及所有使用MAXIO 1602主控的PCIe4.0固态）有个坑，两块以上只认一块。 经分析发现，是联芸MAP1602主控的共性问题。 给官方Linux内核提出了patch，内核6.4版本开始会集成进来。\n解决方法 diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c\r--- a/drivers/nvme/host/pci.c\r+++ b/drivers/nvme/host/pci.c\r@@ -3424,6 +3424,8 @@ static const struct pci_device_id nvme_id_table[] = {\r.driver_data = NVME_QUIRK_BOGUS_NID, },\r{ PCI_DEVICE(0x1e4B, 0x1202), /* MAXIO MAP1202 */\r.driver_data = NVME_QUIRK_BOGUS_NID, },\r+ { PCI_DEVICE(0x1e4B, 0x1602), /* MAXIO MAP1602 */\r+ .driver_data = NVME_QUIRK_BOGUS_NID, },\r{ PCI_DEVICE(0x1cc1, 0x5350), /* ADATA XPG GAMMIX S50 */\r.driver_data = NVME_QUIRK_BOGUS_NID, },\r{ PCI_DEVICE(0x1dbe, 0x5236), /* ADATA XPG GAMMIX S70 */\rPVE 8.0 beta最新，内核是6.2.16-1-pve，所以目前不支持联芸MAP1602主控的多块NVMe同时使用。 现在需要使用的，修改不难， 下载源码，找到代码中drivers/nvme/host/pci.c添加这两行\n{ PCI_DEVICE(0x1e4B, 0x1602), /* MAXIO MAP1602 */\r.driver_data = NVME_QUIRK_BOGUS_NID, },\r重新编译安装，就好了。\n20230616 分享编译好的内核，直接用就好，基于PVE 8.0beta源码6.2.16-1修改： 链接: https://pan.baidu.com/s/1qdF8AVyjUOX_gL8Fxe9g6A?pwd=CHH1 提取码: CHH1\n20230708 分享编译好的内核，直接用就好，基于PVE 8.0正式版源码6.2.16-3修改： 链接: https://pan.baidu.com/s/1juvlOR6uA7G53eiCJTAzGw?pwd=CHH2\n20230712 分享编译好的内核，直接用就好，基于PVE 8.0正式版源码6.2.16-4修改： 链接: https://pan.baidu.com/s/1xHShA5LBaVl2uWH4cIUHGg?pwd=CHH3 提取码: CHH3\n20230713 分享基于PVE 8.0正式版源码6.2.16-4修改的4TB未验证测试版，按114楼增加了延时属性。 链接: https://pan.baidu.com/s/1Wgbva1awvubtBFdxhx0vaA?pwd=CHH4 提取码: CHH4\n20230908 分享基于PVE 8.0正式版源码6.2.16-12修改的4TB未验证测试版，增加延时属性及初始化延迟。 链接: https://pan.baidu.com/s/1D-0qjzBop9d_tOcRu7bs3Q?pwd=CHH5 提取码: CHH5\n安装方法： 上传文件至PVE，登录PVE执行：\ndpkg -i *.deb\r重启即可。\n参考资料 ChipHell\n","date":"2024-08-21T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/pve-maxio1602/","title":"【归档】PVE环境下硬盘识别问题"},{"content":"问题重现 有时在经过错误的配置之后，pve 系统会无法使用，甚至无法进入系统和页面控制台。\n此时需要有其他的方案来修复系统。\n恢复模式 进入恢复模式 开机，选择 \u0026ldquo;Advanced options for Proxmox VE GNU/Linux\u0026rdquo; ，然后选择 Rescue mode。\n用 root 密码登录即可。\n启动集群 systemctl start pve-cluster\r这是就可以访问目录 /etc/pve 来操作集群和虚拟机了。\n操作虚拟机 比如关闭有问题的虚拟机：\nqm stop id\r修改虚拟机配置 cd /etc/pve/nodes/\u0026lt;node_name\u0026gt;/qume-server\r这里能看到各个虚拟机的配置文件，打开相应的配置文件修改即可，比如取消虚拟机的开机，只要将 onboot 修改为 0.\n","date":"2024-08-21T00:00:00Z","permalink":"https://tech.tflasp.fun/2024/pve-recovery/","title":"【归档】PVE进入Recovery模式恢复系统"},{"content":"前言 该文章还在CSDN发表，文章链接：Link\nPVE镜像下载 1、在浏览器输入以下网址下载pve的iso安装镜像。 Download Proxmox VE 清华大学开源镜像站，下拉选择对应版本下载iso文件。\n2、制作系统引导盘\n这里使用rufus工具将ISO文件刻录进U盘\nRufus下载地址 （密码:5k8t）\n下载完成后直接双击运行，无需安装，设备中选择U盘，引导类型选择PVE镜像，然后点击开始，注意U盘中的原有数据会被格式化，重要数据记得备份。\nRufus 注意:一定要使用DD模式写入！使用iso模式写入可能导致某些版本的镜像无法启动！\n当写盘完成时，显示准备就绪，即可关闭程序，弹出U盘，拔出U盘。\nPVE 安装 1、打开主机电源，不断按键盘F12按键（不同主机的启动按键不同，请自行百度）选择由刚刚制作好的启动盘启动。\n2、进入PVE安装页面，选择第一个Install Proxmox VE （Graphical），按回车。\n然后会进入一段代码，此时不要作任何操作。\n3、进入下面页面安装正式开始，首先使用协议页面点击我同意。\n填写邮件，网卡选默认即可。\nGateway是虚拟机网关，一般默认即可，然后点下一步设定密码。\n这一步后就等待安装，安装完毕后重启记得拔掉u盘。\n重启\n进入到这个界面是代表安装成功了。\n初始化PVE 接下来到主力机上进行操作，输入刚刚安装成功显示的网址（如前一个图，网址为192.168.10.20:8006）\n注意输入时要带端口号，不然进不去。\n继续访问，进入pve登录界面。\n输入刚刚设置的密码，改为中文（非必须）即可进入pve，第一次登陆会显示无有效订阅，关闭即可。\n虚拟机直通设备 首先在主板BIOS里查看是否开启了硬件虚拟化（通常在Advanced栏下），同时CPU也必须要支持虚拟化才行。Intel VT-D。\n如上图进入pve shell。\n输入\nnano /etc/default/grub\r对于Intel CPU，添加 intel_iommu=on，操作如下： 2、找到：GRUB_CMDLINE_LINUX_DEFAULT=\u0026ldquo;quiet\u0026rdquo;\n然后修改为\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet intel_iommu=on\u0026quot;\r编辑完成后，使用快捷键 Ctrl + O 回车保存文件，Ctrl + X 退出编辑器。\n3、使用命令 update-grub 保存更改并更新grub\nroot@pve:~# update-grub\r4、更新完成后，使用命令 reboot 重启PVE系统\nroot@pve:~# reboot\r从命令行运行\ndmesg | grep -e DMAR -e IOMMU\r如果没有输出，则说明有问题。\n如果有,可基本确认这个过程顺利完成! 接下来就可以为虚拟机正常的添加硬件直通了。\n对于AMD CPU 对于AMD CPU 添加 amd_iommu=on, 操作如下：\n1、Shell 里面输入命令：nano /etc/default/grub\nroot@pve:~# nano /etc/default/grub\r2、在里面找到：GRUB_CMDLINE_LINUX_DEFAULT=\u0026ldquo;quiet\u0026rdquo;\n然后修改为\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet amd_iommu=on\u0026quot;\r编辑完成后，使用快捷键 Ctrl + O 回车保存文件，Ctrl + X 退出编辑器。\n3、使用命令 update-grub 保存更改并更新grub\nroot@pve:~# update-grub\r4、更新完成后，使用命令 reboot 重启PVE系统\nroot@pve:~# reboot\r这样虚拟机直通设置就完成了。\n当然，也可以使用pvetools来进行pve环境下的优化设置操作，更加方便（需换源）\n虚拟机安装 pve安装虚拟机还是非常简单的，本篇我们将使用pve安装win10来演示一下安装过程，其他系统安装大同小异。\n1、首先需要上传安装镜像，通过local(pve)→ISO镜像→上传，将win10镜像上传到pve中。\n2、回到pve首页，点击右上角的创建虚拟机，常规中自定义虚拟机的名称\n3、操作系统中选择windows10镜像，然后在类型中选择安装操作系统的类型，注意版本也要选择。\n4、系统保持默认即可。\n5、硬盘中总线选择sata，其他保持默认。（当然SCSI、IDE等等都行的）\n6、CPU根据机器配置选择，插槽表示cpu个数单CPU机器输入1，核心根据CPU选择，类别使用HOST系统性能最大化。\n7、内存根据机器配置以及具体需求设置。\n8、网络设置中选择兼容性最高的e1000即可。\n9、最后检查配置没有，确认无误后点击完成。\n10、稍等几秒，机器创建成功。\n11、点击控制台启动，按照正常windows系统安装流程安装即可。\n","date":"2024-07-15T00:00:00Z","image":"https://tech.tflasp.fun/2024/pveinstall/pveinstaller_hufe9653886b00745c7725dbc66e171966_53939_120x120_fill_box_smart1_3.png","permalink":"https://tech.tflasp.fun/2024/pveinstall/","title":"【归档】PVE 8 安装与优化"}]